[{"path":"https://jolenesutton.github.io/fisheriescape/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 fisheriescape authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/articles/fisheriescape_vignette.html","id":"load-example-files-and-a-10-x-10-km2-hexagonal-grid","dir":"Articles","previous_headings":"","what":"Load example files and a 10 x 10 km2 hexagonal grid","title":"Fisheriescape vignette","text":"crab example data set snow crab fishing data fa.poly shapefile snow crab fishing area polygons grid 10 x 10 km2 hexagonal grid sourced https://gcgeo.gc.ca/geonetwork/metadata/eng/572f6221-4d12-415e-9d5e-984b15d34da4","code":"df<-crab fa.poly<-terra::vect(system.file(\"extdata/sample.fa.poly.shp\", package=\"fisheriescape\"))  grid<-gslSpatial::get_shapefile('hex') grid<-terra::crop(grid,ext(fa.poly)*1.05)"},{"path":"https://jolenesutton.github.io/fisheriescape/articles/fisheriescape_vignette.html","id":"site-score","dir":"Articles","previous_headings":"","what":"Site score","title":"Fisheriescape vignette","text":"First, select distinct rows variable ‘event.id’.  Next, use function fs_site_score. function first counts number fishing events per grid cell (hexagon) standard week year. calculates mean number fishing events standard week grid cell. Finally, calculates site score grid cell dividing mean number fishing events grid cell mean number fishing events grid cell summed fleet standard week. figure , red grid cells data points, points fall outside fishing area polygons, included site score calculations.","code":"df.ss<-distinct_at(df,vars('event.id'),.keep_all = T) df.ss<-df.ss[-which(is.na(df.ss$x)|is.na(df.ss$y)),]  ggplot()+   geom_spatvector(data=fa.poly,fill='white')+   geom_spatvector(data=grid,fill=NA)+   geom_point(data=df.ss,aes(x,y)) ss<-suppressMessages(fs_site_score(df.ss,fa.poly,grid=grid))# be patient head(ss) summary(ss) #> # A tibble: 6 × 7 #> # Groups:   fleet, sw [5] #>   GRID_ID  sw    tot.count.hex av.count.hex fleet sum.av.count.fleet site.score #>   <chr>    <chr>         <int>        <dbl> <chr>              <dbl>      <dbl> #> 1 ATW-1161 19                1          0.2 NA                    NA         NA #> 2 ATW-1161 20                2          0.4 NA                    NA         NA #> 3 ATW-1161 21                2          0.4 NA                    NA         NA #> 4 ATX-1161 21                1          0.2 NA                    NA         NA #> 5 ATY-1137 15                1          0.2 NA                    NA         NA #> 6 ATY-1143 13                1          0.2 NA                    NA         NA #>    GRID_ID               sw            tot.count.hex     av.count.hex    #>  Length:16202       Length:16202       Min.   : 1.000   Min.   : 0.200   #>  Class :character   Class :character   1st Qu.: 1.000   1st Qu.: 0.200   #>  Mode  :character   Mode  :character   Median : 2.000   Median : 0.400   #>                                        Mean   : 2.425   Mean   : 0.485   #>                                        3rd Qu.: 3.000   3rd Qu.: 0.600   #>                                        Max.   :58.000   Max.   :11.600   #>                                                                          #>     fleet           sum.av.count.fleet   site.score       #>  Length:16202       Min.   :  0.2      Min.   :0.000301   #>  Class :character   1st Qu.:141.0      1st Qu.:0.000602   #>  Mode  :character   Median :454.0      Median :0.001171   #>                     Mean   :374.7      Mean   :0.005595   #>                     3rd Qu.:512.6      3rd Qu.:0.002736   #>                     Max.   :664.6      Max.   :1.000000   #>                     NA's   :117        NA's   :117 index<-which(grid$GRID_ID%in%unlist(ss[which(is.na(ss$sum.av.count.fleet)),'GRID_ID']))  ggplot()+   geom_spatvector(data=fa.poly,fill='white')+   geom_spatvector(data=grid,fill=NA)+   geom_spatvector(data=grid[index,],fill='red')  ss<-ss[-which(is.na(ss$site.score)),]"},{"path":[]},{"path":"https://jolenesutton.github.io/fisheriescape/articles/fisheriescape_vignette.html","id":"select-distinct-rows","dir":"Articles","previous_headings":"Pivot tables (pre-CEU steps)","what":"Select distinct rows","title":"Fisheriescape vignette","text":"","code":"df2<-distinct_at(df,vars('event.id','fleet','cfv','dateland','ctchdate',                            'gear.amount',                            'hours.fished'),.keep_all = T)   df2<-droplevels(df2) names(df2) #>  [1] \"event.id\"     \"trip.id\"      \"cfv\"          \"dateland\"     \"ctchdate\"     #>  [6] \"latitude\"     \"longitude\"    \"year\"         \"sw\"           \"x\"            #> [11] \"y\"            \"fleet\"        \"gear.amount\"  \"hours.fished\" nrow(df2) #> [1] 41154"},{"path":"https://jolenesutton.github.io/fisheriescape/articles/fisheriescape_vignette.html","id":"pivot-1","dir":"Articles","previous_headings":"Pivot tables (pre-CEU steps)","what":"Pivot 1","title":"Fisheriescape vignette","text":"Function fs_pivot1 summarizes data variables trip.id fleet. resulting table contains summed gear, maximum hours (applicable), mean days (applicable). Now fill missing gear.amount group averages.user needs choose order variables group appropriate fishery interest. end step, missing gear.amount. longer NAs gear.amount. object pivot1 contained NAs hours.fished, repeat step hours.fished. However, can see NAs hours.fished.","code":"pivot1<-fs_pivot1(df2,       keep.cols = c('cfv','year','sw'),        gear.col='gear.amount',        hour.col='hours.fished') pivot1 #> # A tibble: 32,302 × 7 #> # Groups:   trip.id, fleet [32,302] #>    trip.id                         fleet  cfv[,1]  year sw    sum.gear max.hours #>    <chr>                           <chr>  <chr>   <dbl> <chr>    <dbl>     <dbl> #>  1 k6!ffg;2016-05-07;2016-05-07    GQ_CF… k6!ffg   2016 18          NA        24 #>  2 k6!ffg;2016-05-15;2016-05-15    GQ_CF… k6!ffg   2016 19          NA        24 #>  3 k6!ffg;2016-05-23;2016-05-23    GQ_CF… k6!ffg   2016 21          NA        24 #>  4 k6!ffg;2016-05-28;2016-05-28    GQ_CF… k6!ffg   2016 21          NA        24 #>  5 k6!8JJgk6;2016-05-14;2016-05-14 GQ_CF… k6!8JJ…  2016 19          NA        24 #>  6 k6!8JJgk6;2016-05-27;2016-05-27 GQ_CF… k6!8JJ…  2016 21          NA        24 #>  7 k6!8JJgk6;2016-06-05;2016-06-05 GQ_CF… k6!8JJ…  2016 22          NA        24 #>  8 k6gg7!2$;2014-05-31;2014-05-30  GQ_CF… k6gg7!…  2014 22          45        24 #>  9 k6ggJJ!7;2017-05-19;2017-05-19  GQ_CF… k6ggJJ…  2017 20          25        24 #> 10 k6ggJJ!7;2017-05-25;2017-05-25  GQ_CF… k6ggJJ…  2017 21          30        24 #> # ℹ 32,292 more rows summary(pivot1)  #>    trip.id             fleet                 cfv.V1            year      #>  Length:32302       Length:32302       Length:32302       Min.   :2013   #>  Class :character   Class :character   Class :character   1st Qu.:2014   #>  Mode  :character   Mode  :character   Mode  :character   Median :2015   #>                                                           Mean   :2015   #>                                                           3rd Qu.:2017   #>                                                           Max.   :2017   #>                                                                          #>       sw               sum.gear       max.hours  #>  Length:32302       Min.   :  1.0   Min.   :24   #>  Class :character   1st Qu.: 35.0   1st Qu.:24   #>  Mode  :character   Median : 71.0   Median :24   #>                     Mean   : 73.1   Mean   :24   #>                     3rd Qu.:100.0   3rd Qu.:24   #>                     Max.   :438.0   Max.   :24   #>                     NA's   :349 if(length(which(is.na(pivot1$sum.gear)))>0){   pivot1<-fisheriescape::fs_fill_col(pivot1,group.cols=c('cfv','year','sw'),update.col = 'sum.gear',fun=mean)}  if(length(which(is.na(pivot1$sum.gear)))>0){   pivot1<-fisheriescape::fs_fill_col(pivot1,group.cols=c('cfv','year'),update.col = 'sum.gear',fun=mean)}  if(length(which(is.na(pivot1$sum.gear)))>0){   pivot1<-fisheriescape::fs_fill_col(pivot1,group.cols=c('cfv'),update.col = 'sum.gear',fun=mean)}  if(length(which(is.na(pivot1$sum.gear)))>0){   pivot1<-fisheriescape::fs_fill_col(pivot1,group.cols=c('year','sw'),update.col = 'sum.gear',fun=mean)}  if(length(which(is.na(pivot1$sum.gear)))>0){   pivot1<-fisheriescape::fs_fill_col(pivot1,group.cols=c('year'),update.col = 'sum.gear',fun=mean)}  if(length(which(is.na(pivot1$sum.gear)))>0){   print('There are still NAs after filling gear according to current steps.')} summary(pivot1)  #>    trip.id             fleet                 cfv.V1            year      #>  Length:32302       Length:32302       Length:32302       Min.   :2013   #>  Class :character   Class :character   Class :character   1st Qu.:2014   #>  Mode  :character   Mode  :character   Mode  :character   Median :2015   #>                                                           Mean   :2015   #>                                                           3rd Qu.:2017   #>                                                           Max.   :2017   #>       sw               sum.gear        max.hours  #>  Length:32302       Min.   :  1.00   Min.   :24   #>  Class :character   1st Qu.: 35.00   1st Qu.:24   #>  Mode  :character   Median : 71.00   Median :24   #>                     Mean   : 73.03   Mean   :24   #>                     3rd Qu.:100.00   3rd Qu.:24   #>                     Max.   :438.00   Max.   :24"},{"path":"https://jolenesutton.github.io/fisheriescape/articles/fisheriescape_vignette.html","id":"pivot-2","dir":"Articles","previous_headings":"Pivot tables (pre-CEU steps)","what":"Pivot 2","title":"Fisheriescape vignette","text":"Function fs_pivot2 summarizes data user-specified groups, must include year, standard week (sw), fleet, either cfv licence. trap.fishery==‘yes’, resulting table contains maximum gear, maximum hours (applicable), mean days (applicable). trap.fishery!=‘yes’, resulting table contains mean gear, mean hours (applicable), mean days (applicable).","code":"pivot2<-fs_pivot2(pivot1,                   trap.fishery='yes',                   group.cols=c('cfv','fleet','year','sw')) head(as.data.frame(pivot2)) #>      cfv     fleet year sw gear hours #> 1 !2$82$ GQ_CFA_19 2013 29    8    24 #> 2 !2$82$ GQ_CFA_19 2013 30    8    24 #> 3 !2$82$ GQ_CFA_19 2014 29    8    24 #> 4 !2$82$ GQ_CFA_19 2014 30    8    24 #> 5 !2$82$ GQ_CFA_19 2014 31    8    24 #> 6 !2$82$ GQ_CFA_19 2015 29    8    24 summary(pivot2)  #>        cfv.V1          fleet                year           sw            #>  Length:14408       Length:14408       Min.   :2013   Length:14408       #>  Class :character   Class :character   1st Qu.:2014   Class :character   #>  Mode  :character   Mode  :character   Median :2015   Mode  :character   #>                                        Mean   :2015                      #>                                        3rd Qu.:2017                      #>                                        Max.   :2017                      #>       gear            hours    #>  Min.   :  1.00   Min.   :24   #>  1st Qu.: 50.00   1st Qu.:24   #>  Median : 75.00   Median :24   #>  Mean   : 86.12   Mean   :24   #>  3rd Qu.:123.25   3rd Qu.:24   #>  Max.   :438.00   Max.   :24"},{"path":"https://jolenesutton.github.io/fisheriescape/articles/fisheriescape_vignette.html","id":"pivot-3","dir":"Articles","previous_headings":"Pivot tables (pre-CEU steps)","what":"Pivot 3","title":"Fisheriescape vignette","text":"Function fs_pivot3 summarizes data user-specified groups, must include year, standard week (sw), fleet. Grouping include either cfv licence. parameter, “id.col”, needs specified either cfv licence. trap.fishery==‘yes’, resulting table contains number distinct cfvs licences (“n.vessels”), summed gear (“total.gear”), maximum hours (“soak.time”, applicable), mean days (“days”, applicable). trap.fishery!=‘yes’, resulting table contains number distinct cfvs licences (“n.vessels”), summed gear (“total.gear”), mean hours (“soak.time”, applicable), mean days (“days”, applicable).","code":"pivot3<-fs_pivot3(pivot2,                   group.cols=c('fleet','year','sw'),                   id.col='cfv',                   trap.fishery='yes') head(as.data.frame(pivot3)) #>       fleet year sw n.vessels total.gear soak.time #> 1 GQ_CFA_12 2013 17         5        289        24 #> 2 GQ_CFA_12 2013 18       251      24551        24 #> 3 GQ_CFA_12 2013 19       240      22352        24 #> 4 GQ_CFA_12 2013 20       243      22422        24 #> 5 GQ_CFA_12 2013 21       244      24111        24 #> 6 GQ_CFA_12 2013 22       238      23771        24 summary(pivot3)  #>     fleet                year           sw              n.vessels      #>  Length:288         Min.   :2013   Length:288         Min.   :  1.00   #>  Class :character   1st Qu.:2014   Class :character   1st Qu.:  5.00   #>  Mode  :character   Median :2015   Mode  :character   Median : 15.00   #>                     Mean   :2015                      Mean   : 50.03   #>                     3rd Qu.:2016                      3rd Qu.: 35.00   #>                     Max.   :2017                      Max.   :312.00   #>    total.gear      soak.time  #>  Min.   :    1   Min.   :24   #>  1st Qu.:  266   1st Qu.:24   #>  Median :  989   Median :24   #>  Mean   : 4308   Mean   :24   #>  3rd Qu.: 2690   3rd Qu.:24   #>  Max.   :31734   Max.   :24"},{"path":"https://jolenesutton.github.io/fisheriescape/articles/fisheriescape_vignette.html","id":"seasons-and-pivot-4","dir":"Articles","previous_headings":"Pivot tables (pre-CEU steps)","what":"Seasons and Pivot 4","title":"Fisheriescape vignette","text":"function fs_pivot4 little different previous “pivot” functions, performs number steps. yet lot flexibility, needs used caution. Don’t use function fisheries need information summarized province addition fleet. Function fs_pivot4 first identifies start end fishing season year fleet, calculates proportion week fishing occurs. joins proportion week fished output function fs_pivot3.","code":"pivot4<-fs_pivot4(df=df2,                   trap.fishery='yes',           pivot3, #output from fs_pivot3           fleet.col='fleet', #should match between df and pivot3           prov.col=NULL,           area.note.col=NULL) head(as.data.frame(pivot4)) #>       fleet year sw n.vessels total.gear soak.time prop.week.fished #> 1 GQ_CFA_12 2013 17         5        289        24        0.2857143 #> 2 GQ_CFA_12 2013 18       251      24551        24        1.0000000 #> 3 GQ_CFA_12 2013 19       240      22352        24        1.0000000 #> 4 GQ_CFA_12 2013 20       243      22422        24        1.0000000 #> 5 GQ_CFA_12 2013 21       244      24111        24        1.0000000 #> 6 GQ_CFA_12 2013 22       238      23771        24        1.0000000 summary(pivot4)  #>     fleet                year           sw              n.vessels      #>  Length:288         Min.   :2013   Length:288         Min.   :  1.00   #>  Class :character   1st Qu.:2014   Class :character   1st Qu.:  5.00   #>  Mode  :character   Median :2015   Mode  :character   Median : 15.00   #>                     Mean   :2015                      Mean   : 50.03   #>                     3rd Qu.:2016                      3rd Qu.: 35.00   #>                     Max.   :2017                      Max.   :312.00   #>    total.gear      soak.time  prop.week.fished #>  Min.   :    1   Min.   :24   Min.   :0.1429   #>  1st Qu.:  266   1st Qu.:24   1st Qu.:1.0000   #>  Median :  989   Median :24   Median :1.0000   #>  Mean   : 4308   Mean   :24   Mean   :0.9201   #>  3rd Qu.: 2690   3rd Qu.:24   3rd Qu.:1.0000   #>  Max.   :31734   Max.   :24   Max.   :1.0000"},{"path":"https://jolenesutton.github.io/fisheriescape/articles/fisheriescape_vignette.html","id":"common-effort-unit-ceu","dir":"Articles","previous_headings":"","what":"Common effort unit (CEU)","title":"Fisheriescape vignette","text":"fisheries, use function fs_calc_ceu output fs_pivot4 follow prompts. function yet applied American lobster, NAFO 4T. snow crab, fs_calc_ceu uses following steps calculate CEU: rope.soak.time = soak.time/24 magnitude = total.gear intensity = magnitude X rope.soak.time pre.ceu = intensity X proportion.week.fished ceu = sum pre.ceu fleet standard week, divide number years examined","code":"df.ceu<-fs_calc_ceu(pivot4)  head(df.ceu) #> # A tibble: 6 × 3 #> # Groups:   fleet [1] #>   fleet     sw        ceu #>   <chr>     <chr>   <dbl> #> 1 GQ_CFA_12 14        5.6 #> 2 GQ_CFA_12 15       14.4 #> 3 GQ_CFA_12 16     3115.  #> 4 GQ_CFA_12 17     9688.  #> 5 GQ_CFA_12 18    15934.  #> 6 GQ_CFA_12 19    19271."},{"path":"https://jolenesutton.github.io/fisheriescape/articles/fisheriescape_vignette.html","id":"fisheriescape","dir":"Articles","previous_headings":"","what":"Fisheriescape","title":"Fisheriescape vignette","text":"fisheriescape product site score multiplied CEU.","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/articles/fisheriescape_vignette.html","id":"join-site-score-with-ceu-and-calculate-fisheriescape","dir":"Articles","previous_headings":"Fisheriescape","what":"Join site score with CEU and calculate fisheriescape","title":"Fisheriescape vignette","text":"","code":"df<-left_join(ss,df.ceu)  df$fs<-df$site.score*df$ceu   head(df) #> # A tibble: 6 × 9 #> # Groups:   fleet, sw [4] #>   GRID_ID  sw    tot.count.hex av.count.hex fleet  sum.av.count.fleet site.score #>   <chr>    <chr>         <int>        <dbl> <chr>               <dbl>      <dbl> #> 1 ATY-1159 19                1          0.2 GQ_CF…              100      0.002   #> 2 ATY-1159 20                2          0.4 GQ_CF…               88.4    0.00452 #> 3 ATY-1159 21                2          0.4 GQ_CF…               70.4    0.00568 #> 4 ATY-1160 18                1          0.2 GQ_CF…              108.     0.00185 #> 5 ATY-1160 20                2          0.4 GQ_CF…               88.4    0.00452 #> 6 ATY-1160 21                2          0.4 GQ_CF…               70.4    0.00568 #> # ℹ 2 more variables: ceu <dbl>, fs <dbl> summary(df) # a small number of missing fs or av.ceu are expected #>    GRID_ID               sw            tot.count.hex     av.count.hex     #>  Length:16085       Length:16085       Min.   : 1.000   Min.   : 0.2000   #>  Class :character   Class :character   1st Qu.: 1.000   1st Qu.: 0.2000   #>  Mode  :character   Mode  :character   Median : 2.000   Median : 0.4000   #>                                        Mean   : 2.435   Mean   : 0.4869   #>                                        3rd Qu.: 3.000   3rd Qu.: 0.6000   #>                                        Max.   :58.000   Max.   :11.6000   #>                                                                           #>     fleet           sum.av.count.fleet   site.score             ceu            #>  Length:16085       Min.   :  0.2      Min.   :0.0003009   Min.   :1.143e-01   #>  Class :character   1st Qu.:141.0      1st Qu.:0.0006019   1st Qu.:2.938e+03   #>  Mode  :character   Median :454.0      Median :0.0011705   Median :1.593e+04   #>                     Mean   :374.7      Mean   :0.0055953   Mean   :1.405e+04   #>                     3rd Qu.:512.6      3rd Qu.:0.0027364   3rd Qu.:2.204e+04   #>                     Max.   :664.6      Max.   :1.0000000   Max.   :2.506e+04   #>                                                            NA's   :26          #>        fs           #>  Min.   :  0.1143   #>  1st Qu.:  7.5413   #>  Median :  9.1276   #>  Mean   : 15.3383   #>  3rd Qu.: 18.2553   #>  Max.   :143.2850   #>  NA's   :26   #Checks tapply(df$fs,df$fleet,summary) #> $GQ_CFA_12 #>     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.  #>   0.4143   8.1690   9.9722  16.9195  21.3870 143.2850  #>  #> $GQ_CFA_12A #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   1.971   4.865   5.948  10.290  13.778  60.982  #>  #> $GQ_CFA_12E #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #>    5.80   15.60   17.30   17.71   19.67   34.80       1  #>  #> $GQ_CFA_12F #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   4.146   6.551  10.681  13.903  17.337  62.720  #>  #> $GQ_CFA_17 #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   3.463   4.810   9.104  12.020  14.886  76.920  #>  #> $GQ_CFA_19 #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #>  0.1143  1.4726  2.9786  5.2980  6.7017 43.1890      25"},{"path":"https://jolenesutton.github.io/fisheriescape/articles/fisheriescape_vignette.html","id":"plot","dir":"Articles","previous_headings":"Fisheriescape","what":"Plot","title":"Fisheriescape vignette","text":"","code":"hex<-grid naf<-get_shapefile('nafo.clipped') naf<-project(naf,fa.poly) names(naf)[1]<-'nafo'  coast<-gslSpatial::get_shapefile('coastline') coast<-project(coast,fa.poly)  WEEKS<-sort(unique(df$sw)) fig.save='no'  # option to save file to specified path. If not 'yes', the figures will not be save and will only appear in the graphics window. If 'yes', the figures will be saved to the specified path, but will not be printed in the graphics window. path.results<-'....' #path to store figures if fig.save=='yes'  for(i in 1:length(WEEKS)){   dat<-df[which(df$sw==WEEKS[i]),]   index<-which(is.na(dat$fs))   if(length(index)>0){dat<-dat[-index,]}      if(nrow(dat)>0){     hex.out<-hex[which(hex$GRID_ID%in%unique(dat$GRID_ID)),]     hex.out<-merge(hex.out,dat)          pl<-ggplot()+       geom_spatvector(data=fa.poly,fill='white')+           geom_spatvector(data=coast,fill='grey')+       geom_spatvector(data=hex.out,aes(fill=fs),col=NA)+       scale_fill_viridis_c(direction=1,                            option='turbo',                            name=\"Fisheriescape\",                            limits = c(min(df$fs,na.rm=TRUE), max(df$fs,na.rm=TRUE)))+       coord_sf(crs='epsg:4269',datum='epsg:4269',xlim=c(-69,-60),ylim=c(45.5,49.75))+       ggtitle(paste0('SW_',WEEKS[i]))+       theme(panel.grid.major = element_blank(),              panel.grid.minor = element_blank())         if(fig.save=='no'){print(pl)}else{ggsave(pl,                            file = paste0(path.results,'FS_SW', WEEKS[i], '.jpg', sep = ''),                            units = 'in', dpi = 600,height=4,width=6)}   } }"},{"path":"https://jolenesutton.github.io/fisheriescape/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jolene T. Sutton. Author, maintainer.","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sutton JT (2025). fisheriescape: R Functions Help Fisheriescape Project. R package version 0.0.0.9000, https://github.com/JoleneSutton/fisheriescape.","code":"@Manual{,   title = {fisheriescape: R Functions to Help with the Fisheriescape Project},   author = {Jolene T. Sutton},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/JoleneSutton/fisheriescape}, }"},{"path":"https://jolenesutton.github.io/fisheriescape/index.html","id":"fisheriescape","dir":"","previous_headings":"","what":"R Functions to Help with the Fisheriescape Project","title":"R Functions to Help with the Fisheriescape Project","text":"R functions help fisheriescape project.","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Functions to Help with the Fisheriescape Project","text":"install, use code download install latest package build.","code":"# install.packages(\"devtools\") devtools::install_github(\"JoleneSutton/fisheriescape\")"},{"path":"https://jolenesutton.github.io/fisheriescape/reference/ceu.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data set — ceu","title":"Example data set — ceu","text":"Example data set","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/ceu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data set — ceu","text":"","code":"ceu"},{"path":"https://jolenesutton.github.io/fisheriescape/reference/ceu.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data set — ceu","text":"data frame 85 rows 3 variables: fleet fleet sw standard week av.ceu average CEU","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/crab.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data set — crab","title":"Example data set — crab","text":"Example data set","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/crab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data set — crab","text":"","code":"crab"},{"path":"https://jolenesutton.github.io/fisheriescape/reference/crab.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data set — crab","text":"data frame 41,228 rows 14 variables: event.id event.id trip.id trip.id cfv anonymized cfv dateland date landed ctchdate date caught latitude latitude longitude longitude year year sw standard week x x coordinate y y coordinate fleet fleet gear.amount gear.amount hours.fished hours.fished","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_calc_ceu.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate average CEU — fs_calc_ceu","title":"Calculate average CEU — fs_calc_ceu","text":"Uses set cards length cards.","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_calc_ceu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate average CEU — fs_calc_ceu","text":"","code":"fs_calc_ceu(pivot4 = NULL)"},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_calc_ceu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate average CEU — fs_calc_ceu","text":"pivot4 Object returned function fs_pivot4","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_calc_ceu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate average CEU — fs_calc_ceu","text":"data frame","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_fill_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill NAs (replace NAs) in a column based on group summaries. — fs_fill_col","title":"Fill NAs (replace NAs) in a column based on group summaries. — fs_fill_col","text":"Fill NAs (replace NAs) column based group summaries.","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_fill_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill NAs (replace NAs) in a column based on group summaries. — fs_fill_col","text":"","code":"fs_fill_col(df, group.cols, update.col, fun)"},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_fill_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill NAs (replace NAs) in a column based on group summaries. — fs_fill_col","text":"df data frame group.cols Names columns group . update.col Names column summarized. fun function summarizing (e.g., mean, max etc.)","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_fill_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill NAs (replace NAs) in a column based on group summaries. — fs_fill_col","text":"data frame","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_fill_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill NAs (replace NAs) in a column based on group summaries. — fs_fill_col","text":"","code":"#df<-fs_get_data(years=2016:2017,species.sought=144,gclass=1,gearcode=41,nafo=c('4t','4s')) #test<-fs_fill_col(df,group.cols=c('year','nafodiv'),update.col='nugear',fun=mean) #summary(df$nugear) #summary(test$nugear) #test.fail<-fs_fill_col(df,group.cols=c('year','nafodiv'),update.col=c('nugear','amtgear'),fun=mean)"},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_fill_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill NAs (replace NAs) in duplicate rows. Use with caution (see examples)!! — fs_fill_rows","title":"Fill NAs (replace NAs) in duplicate rows. Use with caution (see examples)!! — fs_fill_rows","text":"Fill NAs (replace NAs) duplicate rows. Use caution (see examples)!!","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_fill_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill NAs (replace NAs) in duplicate rows. Use with caution (see examples)!! — fs_fill_rows","text":"","code":"fs_fill_rows(df, group.cols, fill.cols)"},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_fill_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill NAs (replace NAs) in duplicate rows. Use with caution (see examples)!! — fs_fill_rows","text":"df data frame group.cols Names columns group . fill.cols Names columns filled.","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_fill_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill NAs (replace NAs) in duplicate rows. Use with caution (see examples)!! — fs_fill_rows","text":"data frame","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_fill_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill NAs (replace NAs) in duplicate rows. Use with caution (see examples)!! — fs_fill_rows","text":"","code":"Lines <- \"ID Value1 Value2 Value3 Value4 Value5 Value6 1 A B C z z NA 1 A B C y NA z 2 A B C NA x NA 2 A B C x NA NA 3 A B C x NA NA 3 A B C x y z\" (DF <- read.table(text = Lines, header = TRUE, as.is = TRUE)) #>   ID Value1 Value2 Value3 Value4 Value5 Value6 #> 1  1      A      B      C      z      z   <NA> #> 2  1      A      B      C      y   <NA>      z #> 3  2      A      B      C   <NA>      x   <NA> #> 4  2      A      B      C      x   <NA>   <NA> #> 5  3      A      B      C      x   <NA>   <NA> #> 6  3      A      B      C      x      y      z fs_fill_rows(DF,1,2:ncol(DF))# works. Note columns \"Value5\" and \"Value6\" for ID \"1\" #> # A tibble: 4 × 7 #> # Groups:   ID [3] #>      ID Value1 Value2 Value3 Value4 Value5 Value6 #>   <int> <chr>  <chr>  <chr>  <chr>  <chr>  <chr>  #> 1     1 A      B      C      z      z      z      #> 2     1 A      B      C      y      z      z      #> 3     2 A      B      C      x      x      NA     #> 4     3 A      B      C      x      y      z      fs_fill_rows(DF,\"ID\",2:ncol(DF))# works.  Note columns \"Value5\" and \"Value6\" for ID \"1\" #> # A tibble: 4 × 7 #> # Groups:   ID [3] #>      ID Value1 Value2 Value3 Value4 Value5 Value6 #>   <int> <chr>  <chr>  <chr>  <chr>  <chr>  <chr>  #> 1     1 A      B      C      z      z      z      #> 2     1 A      B      C      y      z      z      #> 3     2 A      B      C      x      x      NA     #> 4     3 A      B      C      x      y      z      fs_fill_rows(DF,c(1,5),2:ncol(DF)) #works. Compare to previous examples. #> # A tibble: 5 × 7 #> # Groups:   ID, Value4 [5] #>      ID Value1 Value2 Value3 Value4 Value5 Value6 #>   <int> <chr>  <chr>  <chr>  <chr>  <chr>  <chr>  #> 1     1 A      B      C      z      z      NA     #> 2     1 A      B      C      y      NA     z      #> 3     2 A      B      C      NA     x      NA     #> 4     2 A      B      C      x      NA     NA     #> 5     3 A      B      C      x      y      z      fs_fill_rows(DF,\"ID\",\"Value1:Value6\")# does nothing #> # A tibble: 6 × 7 #> # Groups:   ID [3] #>      ID Value1 Value2 Value3 Value4 Value5 Value6 #>   <int> <chr>  <chr>  <chr>  <chr>  <chr>  <chr>  #> 1     1 A      B      C      z      z      NA     #> 2     1 A      B      C      y      NA     z      #> 3     2 A      B      C      NA     x      NA     #> 4     2 A      B      C      x      NA     NA     #> 5     3 A      B      C      x      NA     NA     #> 6     3 A      B      C      x      y      z"},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_fleet_by_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign missing fleets based on nearest date within range for same cfv. — fs_fleet_by_date","title":"Assign missing fleets based on nearest date within range for same cfv. — fs_fleet_by_date","text":"Assign missing fleets based nearest date within range cfv.","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_fleet_by_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign missing fleets based on nearest date within range for same cfv. — fs_fleet_by_date","text":"","code":"fs_fleet_by_date(df, match.type = \"exact\", num.days = NULL)"},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_fleet_by_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign missing fleets based on nearest date within range for same cfv. — fs_fleet_by_date","text":"df data frame containing columns: cfv, year, fleet, dateland format \"%Y%m%d\" match.type Match dates either 'exact', '.year', 'previous.year'. Default 'exact' date. '.year' 'previous.year', 'num.days' must specified. num.days Plus minus days around date search.","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and process ziff data for fisheriescape project. — fs_get_data","title":"Get and process ziff data for fisheriescape project. — fs_get_data","text":"Get process ziff data fisheriescape project.","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and process ziff data for fisheriescape project. — fs_get_data","text":"","code":"fs_get_data(   years = NULL,   species.sought = NULL,   nafo = NULL,   gclass = NULL,   gearcode = NULL )"},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and process ziff data for fisheriescape project. — fs_get_data","text":"years years? Required species.sought species sought statac code? Required nafo NAFO divisions? Case insensitive gclass gear class? gearcode gear code?","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_get_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and process ziff data for fisheriescape project. — fs_get_data","text":"","code":"#fs_get_data(years = 2017, species.sought = 705, nafo=c('4r'), gclass='1', gearcode=c('62','99'))"},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_pivot1.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisheriescape pivot table 1 in path to CEU calculations. — fs_pivot1","title":"Fisheriescape pivot table 1 in path to CEU calculations. — fs_pivot1","text":"Fisheriescape pivot table 1 path CEU calculations.","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_pivot1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisheriescape pivot table 1 in path to CEU calculations. — fs_pivot1","text":"","code":"fs_pivot1(df, keep.cols, gear.col, hour.col = NULL, day.col = NULL)"},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_pivot1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisheriescape pivot table 1 in path to CEU calculations. — fs_pivot1","text":"df data frame keep.cols Names columns df retain output, different 'trip.id','fleet', 'gear.col','hour.col, 'day.col' gear.col Name gear column summarize. Required. hour.col Name hours column summarize. Optional. day.col Name day column summarize. Optional.","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_pivot2.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisheriescape pivot table 2 in path to CEU calculations. — fs_pivot2","title":"Fisheriescape pivot table 2 in path to CEU calculations. — fs_pivot2","text":"Fisheriescape pivot table 2 path CEU calculations.","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_pivot2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisheriescape pivot table 2 in path to CEU calculations. — fs_pivot2","text":"","code":"fs_pivot2(pivot1, trap.fishery = \"yes\", group.cols)"},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_pivot2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisheriescape pivot table 2 in path to CEU calculations. — fs_pivot2","text":"pivot1 output function fs_pivot1 trap.fishery trap fishery? Default 'yes'. group.cols Names columns group .","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_pivot3.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisheriescape pivot table 3 in path to CEU calculations. — fs_pivot3","title":"Fisheriescape pivot table 3 in path to CEU calculations. — fs_pivot3","text":"Fisheriescape pivot table 3 path CEU calculations.","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_pivot3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisheriescape pivot table 3 in path to CEU calculations. — fs_pivot3","text":"","code":"fs_pivot3(pivot2, group.cols, id.col, trap.fishery)"},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_pivot3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisheriescape pivot table 3 in path to CEU calculations. — fs_pivot3","text":"pivot2 output function fs_pivot2 group.cols Names columns group . id.col Name column vessel licence individual specifier. trap.fishery trap fishery? Default 'yes'.","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_pivot4.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisheriescape not really a pivot, but should be done after pivot table 3 in path to CEU calculations. — fs_pivot4","title":"Fisheriescape not really a pivot, but should be done after pivot table 3 in path to CEU calculations. — fs_pivot4","text":"Fisheriescape really pivot, done pivot table 3 path CEU calculations.","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_pivot4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisheriescape not really a pivot, but should be done after pivot table 3 in path to CEU calculations. — fs_pivot4","text":"","code":"fs_pivot4(   df1,   trap.fishery,   pivot3,   fleet.col,   prov.col = NULL,   area.note.col = NULL )"},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_pivot4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisheriescape not really a pivot, but should be done after pivot table 3 in path to CEU calculations. — fs_pivot4","text":"df1 ziff data frame. trap.fishery trap fishery? Default 'yes'. pivot3 output fs_pivot3 fleet.col Name fleet column. match df pivot3 prov.col Currently NULL area.note.col Currently NULL","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_site_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisheriescape calculate site score — fs_site_score","title":"Fisheriescape calculate site score — fs_site_score","text":"Fisheriescape calculate site score","code":""},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_site_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisheriescape calculate site score — fs_site_score","text":"","code":"fs_site_score(df, fa.poly, grid = NULL)"},{"path":"https://jolenesutton.github.io/fisheriescape/reference/fs_site_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisheriescape calculate site score — fs_site_score","text":"df .site.score data frame. fa.poly fishing area polygon. CRS albers. Must contain column called 'fleet'. grid Grid shapefile. NULL, defaults 'dfo_hex_coffen_smout_cropped.shp'.","code":""}]
